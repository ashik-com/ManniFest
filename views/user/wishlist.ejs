<%- include ('../user/partials/header', {name:name})%>

  <section style="margin-top: 80px;">
    <div class="wishlist-container">
      <h2>My Wishlist (<%= wishlist.items.length %>)</h2>
      <div class="wishlist-items">
        <% if (wishlist && wishlist.items.length> 0) { %>
          <% wishlist.items.forEach(item=> { %>
            <div class="wishlist-item">
              <!-- Product Image -->
              <img class="wishlist-image" src="<%= item?.variantId?.images[0] || '/default-image.jpg' %>"
                alt="<%= item.productId.name %>">

              <!-- Product Details -->
              <div class="item-details">
                <h3>
                  <%= item.productId.name %>
                </h3>
                <p>Size: <%= item.variantId.size %>
                </p>
                <p>Color: <%= item.variantId.color %>
                </p>
                <p class="price">
                  <span class="old-price">‚Çπ<%= item.productId.baseprice %></span>
                  ‚Çπ<%= item.price %>
                    <span class="discount">
                      <%= Math.round(((item.productId.baseprice - item.price) / item.productId.baseprice) * 100) %>% Off
                    </span>
                </p>
              </div>
              <!-- Move to Cart Button -->
              <button style="margin-right: 30px;" class="move-to-cart-btn" data-item-id="<%= item._id %>">
                Move to Cart üõí
              </button>

              <!-- Delete Icon -->
              <span class="trash-icon" data-item-id="<%= item._id %>">üóëÔ∏è</span>


            </div>
            <% }) %>
              <% } else { %>
                <p>Your wishlist is empty.</p>
                <% } %>
      </div>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const moveToCartButtons = document.querySelectorAll(".move-to-cart-btn");
        moveToCartButtons.forEach(button => {
            button.addEventListener("click", () => {
                const itemId = button.getAttribute("data-item-id");
                moveToCart(itemId);
            });
        });

        const removeIcons = document.querySelectorAll(".trash-icon");
        removeIcons.forEach(icon => {
            icon.addEventListener("click", () => {
                const itemId = icon.getAttribute("data-item-id");
                removeFromWishlist(itemId);
            });
        });
    });

    async function moveToCart(itemId) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to move this item to your cart?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes, move it',
            cancelButtonText: 'No',
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch("/user/move-to-cart", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ itemId }),
                });
                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Item moved to cart successfully",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    window.location.reload();
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: data.message || "Failed to move item to cart",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "An error occurred",
                    showConfirmButton: false,
                    timer: 1500,
                });
            }
        }
    }

    async function removeFromWishlist(itemId) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to remove this item from your wishlist?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it',
            cancelButtonText: 'No',
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch("/user/remove-from-wishlist", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ itemId }),
                });
                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Item removed from wishlist successfully",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    window.location.reload();
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: data.message || "Failed to remove item",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire({
                    position: "center",
                    icon: "error",
                    title: "An error occurred",
                    showConfirmButton: false,
                    timer: 1500,
                });
            }
        }
    }
</script>

  <%- include ('../user/partials/footer')%>