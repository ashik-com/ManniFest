<!-- views/admin/edit-offer.ejs -->
<%- include('../admin/partials/header') %>
<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <h2>Edit Offer for <%= offer.type === 'product' ? offer.productId.name : offer.categoryId.name %></h2>
            <form id="editOfferForm" action="/admin/update-offer/<%= offer._id %>" method="POST">
                <input type="hidden" name="offerType" value="<%= offer.type %>">
                <div class="mb-3">
                    <label for="entityName" class="form-label"><%= offer.type === 'product' ? 'Product' : 'Category' %>:</label>
                    <input type="text" id="entityName" class="form-control" value="<%= offer.type === 'product' ? offer.productId.name : offer.categoryId.name %>" disabled>
                </div>
                <div class="mb-3">
                    <label for="discountType" class="form-label">Discount Type:</label>
                    <select name="discountType" id="discountType" class="form-control" required>
                        <option value="percentage" <%= offer.discountType === 'percentage' ? 'selected' : '' %>>Percentage</option>
                        <option value="fixed" <%= offer.discountType === 'fixed' ? 'selected' : '' %>>Fixed Amount</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="discountValue" class="form-label">Discount Value:</label>
                    <input type="number" name="discountValue" id="discountValue" class="form-control" value="<%= offer.discountValue %>" required min="0" step="0.01">
                </div>
                <div class="mb-3">
                    <label for="startDate" class="form-label">Start Date:</label>
                    <input type="date" name="startDate" id="startDate" class="form-control" value="<%= offer.startDate.toISOString().split('T')[0] %>" required>
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">End Date:</label>
                    <input type="date" name="endDate" id="endDate" class="form-control" value="<%= offer.endDate.toISOString().split('T')[0] %>" required>
                </div>
                <button type="submit" class="btn btn-success">Update Offer</button>
                <a href="/admin/<%= offer.type === 'product' ? 'products' : 'categorys' %>" class="btn btn-secondary">Cancel</a>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('editOfferForm');
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('startDate').setAttribute('min', today);
        document.getElementById('endDate').setAttribute('min', today);

        form.addEventListener('submit', async function (e) {
            e.preventDefault();

            const discountValue = parseFloat(document.getElementById('discountValue').value);
            const startDate = new Date(document.getElementById('startDate').value);
            const endDate = new Date(document.getElementById('endDate').value);

            if (discountValue <= 0) {
                Swal.fire({ icon: 'error', title: 'Invalid Discount', text: 'Discount value must be greater than 0!' });
                return;
            }
            if (startDate >= endDate) {
                Swal.fire({ icon: 'error', title: 'Invalid Dates', text: 'End date must be after start date!' });
                return;
            }

            const formData = new FormData(form);
            const data = Object.fromEntries(formData);

            try {
                const response = await fetch(`/admin/update-offer/${form.action.split('/').pop()}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                });

                const result = await response.json();
                if (response.ok && result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Offer Updated!',
                        text: result.message,
                        timer: 1500,
                    }).then(() => window.location.href = `/admin/${data.offerType === 'product' ? 'products' : 'categorys'}`);
                } else {
                    Swal.fire({ icon: 'error', title: 'Error', text: result.message || 'Failed to update offer' });
                }
            } catch (error) {
                Swal.fire({ icon: 'error', title: 'Network Error', text: 'An error occurred while updating the offer' });
            }
        });

        document.getElementById('startDate').addEventListener('change', function () {
            document.getElementById('endDate').setAttribute('min', this.value);
        });
    });
</script>
<%- include('../admin/partials/footer') %>